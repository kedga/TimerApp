@inject IJSRuntime JSRuntime

@if (Timer is null) throw new Exception("No timer object provided to timer component.");

<div class="timer-wrapper pb-0 cursor-pointer @visible" @onclick="StopTimer">
	<div class="w-full opacity-100 group-hover:fade-opacity fade">
		<TimerTitle Timer="Timer" />
	</div>
	<div class="h-full w-full relative -translate-y-2">
		<div class="h-full group-hover:scale-75 fade group-hover:-translate-x-12 opacity-100 group-hover:fade-opacity">
			<TimeRemaining s="Timer.TimeRemaining" />
		</div>
		<div class="absolute top-1/2 right-6 -translate-y-1/2 opacity-0 group-hover:opacity-100 group-hover:scale-150 fade drop-shadow-md">
			<i class="fa-solid fa-arrow-rotate-left text-5xl"></i>
		</div>
	</div>
</div>

@code {
	[Parameter]
	public TimerManager Timer { get; set; } = null!;

	[Parameter]
	public bool Visible { get; set; }

	string visible => Visible ? "visible static" : "invisible absolute";

	async Task StopTimer()
	{
		if (Timer.Completed) await JSRuntime.InvokeVoidAsync("stopBeepSound");

		await Timer.Stop(Timer.Guid);
	}
}
